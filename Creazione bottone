//Creo un tasto "Stop" per interrompere una corsa o un processo,
utilizzo un pulsante (UIButton) e 
implemento una funzione di gestione dell'azione che verrà chiamata quando il pulsante viene premuto. 

import UIKit

class ViewController: UIViewController {

    var isRunning = false
    var timer: Timer?

    override func viewDidLoad() {
        super.viewDidLoad()

        // Crea il pulsante "Start"
        let startButton = UIButton(type: .system)
        startButton.setTitle("Start", for: .normal)
        startButton.frame = CGRect(x: 100, y: 100, width: 100, height: 50)
        startButton.addTarget(self, action: #selector(startButtonPressed), for: .touchUpInside)
        view.addSubview(startButton)

        // Crea il pulsante "Stop"
        let stopButton = UIButton(type: .system)
        stopButton.setTitle("Stop", for: .normal)
        stopButton.frame = CGRect(x: 100, y: 200, width: 100, height: 50)
        stopButton.addTarget(self, action: #selector(stopButtonPressed), for: .touchUpInside)
        view.addSubview(stopButton)
    }

    @objc func startButtonPressed() {
        if !isRunning {
            // Inizia la corsa o il processo
            timer = Timer.scheduledTimer(timeInterval: 1.0, target: self, selector: #selector(runProcess), userInfo: nil, repeats: true)
            isRunning = true
        }
    }

    @objc func stopButtonPressed() {
        if isRunning {
            // Interrompi la corsa o il processo
            timer?.invalidate()
            timer = nil
            isRunning = false
        }
    }

    @objc func runProcess() {
        // Logica della corsa o del processo
        print("Eseguo il processo...")
    }
}

//Quando il pulsante "Start" viene premuto, viene avviato un processo simulato utilizzando il timer. 
Quando il pulsante "Stop" viene premuto, il timer viene invalidato interrompendo così il processo.
